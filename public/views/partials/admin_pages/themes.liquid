{% liquid
  function themes = 'modules/core/lib/queries/registry/get', type: 'theme'
  function main_theme = 'modules/theme-manager/lib/queries/theme/get_main'
  function theme_variables = 'modules/theme-manager/lib/queries/theme_settings/load', theme_name: main_theme
  function headscripts = 'modules/core/lib/queries/headscripts/get'
  assign has_editable_color = theme_variables.colors | detect: isEditable: true
%}

<div class="p-6 container">
  <h1 class="text-2xl">Theme manager</h1>
  <div class="py-6">
    <div class="my-6 border border-slate-200 px-6 py-4 rounded-md">
      <h2 class="text-xl font-bold pb-8">Active theme</h2>
      <form action="/admin/themes/set" method="post">
        <input type="hidden" name="authenticity_token" value="{{ context.authenticity_token }}">
        <input type="hidden" name="_method" value="post" />

        <select name="theme" class="border-slate-200 px-3 py-1 rounded-md mr-2">
          <option disabled {% unless main_theme %} selected {% endunless %}>Select from the available themes</option>
          {% for theme in themes %}
            <option value="{{ theme.machine_name }}" {% if main_theme == theme.machine_name %} selected {% endif %}>{{ theme.name }}</option>
          {% endfor %}
        </select>

        <button type="submit" class="whitespace-nowrap inline-flex items-center justify-center bg-blue-500 hover:bg-blue-700 text-white rounded-md px-3 py-1 text-sm">Switch theme</button>
      </form>
    </div>
  </div>
  {% unless has_editable_color == blank %}
  <div class="py-6">
    <div class="my-6 border border-slate-200 px-6 py-4 rounded-md">
      <h2 class="text-xl font-bold pb-8">Reset current theme</h2>
          <form action="/admin/themes" method="post" class="mt-6">
            <input type="hidden" name="authenticity_token" value="{{ context.authenticity_token }}">
            <input type="hidden" name="_method" value="delete">
            <input type="hidden" name="settings[name]" value="{{ main_theme }}">
            <button type="submit" class="whitespace-nowrap inline-flex items-center justify-center bg-blue-500 hover:bg-red-500 text-white rounded-md px-3 py-1 text-sm">Reset theme settings to default</button>
          </form>
      </form>
    </div>
  </div>
  {% endunless %}
  <div class="py-6 flex gap-6">

    {% unless has_editable_color == blank %}
    <div class="flex-1 my-6 border border-slate-200 px-6 py-4 rounded-md">
      <h2 class="text-xl font-bold pb-8">Theme variables</h2>
      <form action="/admin/themes/update" method="post">
        <input type="hidden" name="authenticity_token" value="{{ context.authenticity_token }}">
        <input type="hidden" name="_method" value="put" />
        <input type="hidden" name="settings[name]" value="{{main_theme}}" />

        <div class="card mb-12">
          {% for color in theme_variables.colors %}
            <fieldset class="py-2 pe-6 first:pt-0 last:pb-0 flex gap-4 border-b last:border-0 items-center justify-between {% unless color.isEditable %}hidden{% endunless %}">
              <span class="text-content-sidenote flex-1 pe-8">
                <div class="uppercase">{{ color.name }}:</div>
              </span>
              {% assign input_name = 'settings[colors][' | append: color.name | append: ']' %}
              <div>
              <input
                data-color-input="{{color.name}}"
                type="color"
                class="inline-block"
                data-rgb="{{color.value}}"
              />
              <input
                type="hidden"
                id="{{color.name}}"
                name="{{input_name}}"
              />
              </div>
            </fieldset>
          {% endfor %}
        </div>


        <button type="submit" class="whitespace-nowrap inline-flex items-center justify-center bg-blue-500 hover:bg-blue-700 text-white rounded-md px-3 py-1 text-sm">Save</button>
      </form>
    </div>
    {% endunless %}
    {% if theme_variables.preview %}
    <div class="w-2/3 my-6 border border-slate-200 px-6 py-4 rounded-md">
      <h2 class="text-xl font-bold pb-8">Live preview</h2>
      <iframe id="theme-preview" src="/_theme_preview" class="w-full min-h-screen"></iframe>
    </div>
    {% endif %}
  </div>
</div>
<script>
const colorInputs = document.querySelectorAll('[data-color-input]');
const preview = document.querySelector('#theme-preview');
colorInputs.forEach(input => {
  const initialRGBValue = input.getAttribute('data-rgb');
  // set initial value
  input.value = '#'+initialRGBValue.match(/\d+/g).map(x=>(+x).toString(16).padStart(2,0)).join``;
  // update rgb value on change
  input.addEventListener('input', (e) => {
    const rgb = e.target.value.match(/[A-Za-z0-9]{2}/g).map(v => parseInt(v, 16)).join(',');
    const rgbInput = document.getElementById(input.getAttribute('data-color-input'));
    const cssPropName = `--${e.target.getAttribute('data-color-input')}`;
    preview && preview.contentWindow.document.body.style.setProperty(cssPropName, rgb);
    rgbInput.value = rgb;
  });
  input.dispatchEvent(new Event('input', {bubbles:true}));
});
</script>
